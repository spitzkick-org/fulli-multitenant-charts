apiVersion: v1
kind: Service
metadata:
  name: salonservice-db-service
  namespace: {{ .Release.Name }}
  labels:
    app: salonservice-db-service
    stage: production
    owner: spitzkick
spec:
  type: {{ .Values.salonServiceDb.service.type }}
  ports:
    - name: {{ .Values.salonServiceDb.service.name }}
      port: {{ .Values.salonServiceDb.service.port }}
      targetPort: {{ .Values.salonServiceDb.ports.containerPort }}
  selector:
    app: salonservice-db-instance
    stage: production
    owner: spitzkick
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: salonservice-db-pv-claim
  namespace: {{ .Release.Name }}
  labels:
    app: salonservice-db-pv-claim
    stage: production
    owner: spitzkick
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 5Gi
---
apiVersion: v1
kind: Secret
metadata:
  name: bitnami-postgresql-creds
  namespace: {{ .Release.Name }}
data:
  POSTGRESQL_PASSWORD: {{ randAlphaNum 20 }}
  POSTGRESQL_POSTGRES_PASSWORD: {{ randAlphaNum 20 }}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: salonservice-db
  namespace: {{ .Release.Name }}
spec:
  selector:
    matchLabels:
      app: salonservice-db-instance
      stage: production
      owner: spitzkick
  replicas: {{ .Values.global.replicas }}
  template:
    metadata:
      labels:
        app: salonservice-db-instance
        stage: production
        owner: spitzkick
    spec:
      containers:
        - name: salonservice-db-instance-container
          image: {{ printf "%s:%s" .Values.salonServiceDb.image.repository .Values.salonServiceDb.image.tag }}
          imagePullPolicy: {{ .Values.salonServiceDb.image.pullPolicy }}
          ports:
            - containerPort: {{ .Values.salonServiceDb.ports.containerPort }}
          env:
            - name: POSTGRESQL_DATABASE
              value: "salon"
            - name: POSTGRESQL_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: bitnami-postgresql-creds
                  key: POSTGRESQL_PASSWORD
          volumeMounts:
            - mountPath: /var/lib/postgresql/data
              name: salonservice-db-pv
              subPath: postgres
      volumes:
        - name: salonservice-db-pv
          persistentVolumeClaim:
            claimName: salonservice-db-pv-claim
