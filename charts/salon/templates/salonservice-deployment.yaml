#What Docker Image we are using and what is the Name of the Application
#Furthermore you will define how many PODS you wanna have
# kubectl apply -f .\backend-deployment.yaml -- Create the Workloads (Node with 3 Pods) Cluster must be available!
apiVersion: apps/v1
kind: Deployment
metadata:
  #Name of the Workloads
  name: salonservice-api
  namespace: {{ .Release.Name }}
  labels:
    app: salonservice-api
    stage: production
    owner: spitzkick
spec:
  selector:
    matchLabels:
      #Get all Pods based on that label
      app: salonservice-api-instance
      stage: production
      owner: spitzkick
  replicas: {{ .Values.global.replicas }}
  template:
    metadata:
      labels:
        #Labels of the single pod
        app: salonservice-api-instance
        stage: production
        owner: spitzkick
    spec:
      containers:
        - name: salonservice-api-instance-container #Container name which is running in the Pod
          image: {{ printf "%s:%s" .Values.salonService.image.repository .Values.salonService.image.tag }}
          imagePullPolicy: {{ .Values.salonService.image.pullPolicy }}
          ports:
            - containerPort: {{ .Values.salonService.ports.containerPort }}
          env:
            - name: POSTGRES_USER
              value: {{ .Values.env.salonServiceDb.dbUser }}
            - name: POSTGRES_PASSWORD
              value: {{ .Values.env.salonServiceDb.dbPassword }}
            - name: POSTGRES_HOST
              value: {{ .Values.env.salonServiceDb.dbHost }}
