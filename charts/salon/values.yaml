env:
  frontendService:
    addr: spitzkickpage
    port: 80
  authService:
    addr: authservice
    apiEntryPoint: /auth
    port: 8080
  salonService:
    addr: salonservice-api-service
    apiEntryPoint: /salon
    apiEntryPoint2: /service
    port: 3000
  salonServiceDb:
    addr: salonservice-db
    port: 5432
    dbHost: salonservice-db-service
    dbName: salon
    dbUser: postgresadmin
    dbPassword: postgres
  appointmentService:
    addr: appointment-api-service
    apiEntryPoint: /appointments
    port: 3100

global:
  replicas: 1
  domain: speedl.de

authService:
  image:
    repository: gcr.io/spitzkick/master-auth-service
    tag: latest
    pullPolicy: Always
  ports:
    containerPort: 8080

  resources:
    requests:
      cpu: 100m
      memory: 220Mi
    limits:
      cpu: 200m
      memory: 450Mi
  service:
    type: ClusterIP
    name: tcp-authservice
    port: 8080

salonService:
  image:
    repository: gcr.io/spitzkick/master-salon
    tag: latest
    pullPolicy: Always
  ports:
    containerPort: 3000

  resources:
    requests:
      cpu: 100m
      memory: 220Mi
    limits:
      cpu: 200m
      memory: 450Mi
  service:
    type: ClusterIP
    name: tcp-salonservice
    port: 3000

salonServiceDb:
  image:
    repository: bitnami/postgresql
    tag: latest
    pullPolicy: IfNotPresent
  ports:
    containerPort: 5432

  resources:
    requests:
      cpu: 100m
      memory: 220Mi
    limits:
      cpu: 200m
      memory: 450Mi
  service:
    type: ClusterIP
    name: tcp-salondbservice
    port: 5432

appointmentService:
  image:
    repository: gcr.io/spitzkick/master-appointment
    tag: latest
    pullPolicy: Always
  ports:
    containerPort: 3000

  resources:
    requests:
      cpu: 100m
      memory: 220Mi
    limits:
      cpu: 200m
      memory: 450Mi
  service:
    type: ClusterIP
    name: tcp-appointmentservice
    port: 3100

frontend:
  image:
    repository: gcr.io/spitzkick/master-usa-frontend
    tag: latest
    pullPolicy: Always
  ports:
    containerPort: 80
  resources:
    requests:
      cpu: 100m
      memory: 64Mi
    limits:
      cpu: 200m
      memory: 128Mi
  service:
    type: ClusterIP
    name: tcp-frontend
    port: 80
